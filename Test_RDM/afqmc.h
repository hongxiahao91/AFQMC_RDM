#include <math.h>
#include <stdio.h>
#include <sys/time.h>
#include <malloc.h>
#include <stdlib.h>
#include <sys/types.h>
#include <time.h>
#include <assert.h>
#include "/gpfs/runtime/opt/intel/2013.1.106/mkl/include/mkl.h"
#include "complex-mkl.h"

/*NRC Definitions*/
#define TINY 1.0e-20
#define IM1          2147483563
#define IM2          2147483399
#define AM           (1.0 / (double)IM1)
#define IMM1         (IM1 - 1)
#define IA1          40014
#define IA2          40692
#define IQ1          53668
#define IQ2          52774
#define IR1          12211
#define IR2          3791
#define NTAB         32
#define NDIV         (1 + IMM1 / NTAB)
#define REPS         1.2e-7
#define RNMX         (1.0 - REPS)
#define IA 16807
#define IM 2147483647
#define IQ 127773
#define IR 2836
#define EPS 1.2e-20
#define RADIX 2.0

/**************************************************************/

typedef struct st1 {
  double beta, dtau; 
  double U_fermions, t_fermions;
  double V_fermions; 
  double U_bosons, t_bosons; 
  double U_bose_fermi; 
  double gamma;   
  double U_exponent_fermions, U_exponent_bosons, U_exponent_bose_fermi; 
  double factor_spin_up_field_up, factor_spin_up_field_down; 
  MKL_Complex16 propagation_exponent_fermions, propagation_exponent_extended, propagation_exponent_bosons, propagation_exponent_bose_fermi; 
  double mean_field_exponential_fermions, mean_field_exponential_bosons, mean_field_exponential_bose_fermi; 
  double init_trial_energy, trial_energy, exp_trial_energy; 
  double trial_density_up, trial_density_down, trial_density_bosons, total_trial_density;   
  double min_walker_weight, max_walker_weight;
  double population_control_factor; 
  int max_number_walkers, min_number_walkers;  
  double total_energy_shift; /*The Total Constant Shift of the Energy*/
  double energy_mean, energy_min, energy_max, energy_cap_constant; /*Sets Constraints on Calculated Energies*/
} cns_st;

typedef struct st2 {
  int n_sites_one, n_sites_two; 
  int n_sites, n_sites_sq, n_sites_third, n_sites_fourth;
  int n_spatial_orbitals, n_spatial_orbitals_sq, n_spatial_orbitals_third, n_spatial_orbitals_fourth; 
  int n_spatial_orbitals_n_up, n_spatial_orbitals_n_down; 
  int n_kinetic_sparse_up, n_kinetic_sparse_down; /*Number of Kinetic Terms Necessary for Doing Sparse Calculation of Kinetic Energy*/
  int n_potential_sparse_up, n_potential_sparse_down, n_potential_sparse_updown; /*Number of Potential Terms Necessary For Doing Sparse Calculation of Potential Energy*/  
  int n_max_orbital_trial_energy; /*Finds the Largest Orbital in Trial Wavefunction*/
  int n_spin_orbitals, n_spin_orbitals_sq, n_spin_orbitals_third, n_spin_orbitals_fourth; 
  int n_determinants_trial_energy, n_determinants_trial_phaseless;   /*Number of Determinants in the Trial WF To Allow for MultiDeterminant Tests*/ 
  int n_determinants_max; 
  int n_up, n_down;  
  int n_electrons; 
  int n_states;  
  int n_sites_n_up, n_sites_n_down;
  int n_determinants_energy_n_spatial_orbitals_n_up, n_determinants_energy_n_spatial_orbitals_n_down; 
  int n_determinants_energy_n_up_sq, n_determinants_energy_n_down_sq; 
  int n_determinants_phaseless_n_spatial_orbitals_n_up, n_determinants_phaseless_n_spatial_orbitals_n_down; 
  int n_determinants_phaseless_n_up_sq, n_determinants_phaseless_n_down_sq;   
  int n_up_sq, n_down_sq;
  int n_bosons; 
  int n_walkers; 
  int flag_trial;              /*Type of Trial Wavefunction - 0 If Free, 1 If UHF*/ 
  int flag_pbc;                /*Periodic Boundary Conditions - 0 If Open, 1 If Periodic*/ 
  int flag_cp;                 /*Flag for Using Constrained Path or Not*/
  int flag_discrete;           /*Whether Discrete or Continuous Transform*/
  int flag_phaseless;          /*Wehter or Not to Use Phaseless Approximation*/
  int flag_meanfield;          /*Whether to Subtract Off Mean Fields In the Transform*/
  int flag_local_energy;       /*Whether or Not to Use the Local Energy Approximation to the Phaseless*/
  int flag_spin_polarized;     /*Whether Spin Polarized or Not*/
  int flag_simulation_type;    /*The Flag for the Type of Simulation*/
  int flag_real_eigenvectors;  /*If the Eigenvectors Are Real, Which Simplifies the Calculation*/
  int flag_read_in_trial;      /*If You Should Read In Trial Wavefunction or Not*/
  int flag_restart;            /*Restart Using the Previous Wavefunctions*/
  int flag_compute_2RDM;       /*Compute the 2nd RDM*/
  int flag_back_propagation;   /*Decide Whether To Do Back Propagation Or Not*/
  int n_steps; 
  int n_steps_energy;          /*How Often You Collect Energy Measurements*/
  int n_steps_orthogonalize;   /*How Often You Orthogonalize*/
  int n_steps_population;      /*How Often You Do Population Control*/
  int n_steps_equilibration;   /*How Many Steps To Do Equilibration*/
  int n_steps_start;           /*When To Start Accumulating Energies*/
  int n_steps_production;      /*The Number of Production Steps*/
  int n_steps_growth_estimator; /*How Often To Use Growth Estimator to Recalculate Trial Energy*/
  int n_steps_back_propagation; /*How Many Steps to Back Propagate*/
  double det_cutoff_energy; /*The Min Value for Determinants To Be Included in the Calculation of the Energy*/
  double det_cutoff_phaseless; /*The Min Value for Determinants To Be Included in the Phaseless Approx*/   
} int_st;

/***************************************************************/

void Randomize();
double ran_nrc(long *);
double ran();
float gasdev(long *idum);
float ran1(long *idum); 

/**************************************************************/

void dzero_vec(double *vec, int size); 
void izero_vec(int *vec, int size);
void czero_vec(MKL_Complex16 *vec, int size); 
void cunity_vec(MKL_Complex16 *vec, int size); 

/***************************************************************/

void copy_mat(double *mat_1, double *mat_2, int size);
void copy_cmat(MKL_Complex16 *mat_1, MKL_Complex16 *mat_2, int size);  
void dmat_dmat(double *mat_1, double *mat_2, double *product, int size_1, int size_2, int size_3); 
void dmat_cmat(double *mat_1, MKL_Complex16 *mat_2, MKL_Complex16 *product, int size_1, int size_2, int size_3); 
void cmat_cmat(MKL_Complex16 *mat_1, MKL_Complex16 *mat_2, MKL_Complex16 *product, int size_1, int size_2, int size_3); 
void inverse(double *matrix, double *inverse, int size); 
MKL_Complex16 complex_inverse_det_fermions(MKL_Complex16 *matrix, MKL_Complex16 *inverse, int size); 
void complex_matrix_inverse(MKL_Complex16 *input_matrix, MKL_Complex16 *output_matrix, int size); 
double inverse_det(double *matrix, double *inverse, int size); 
void transpose_dmat_dmat(double *mat_1, double *mat_2, double *product, int size_1, int size_2, int size_3); 
void transpose_cmat_cmat(MKL_Complex16 *mat_1, MKL_Complex16 *mat_2, MKL_Complex16 *product, int size_1, int size_2, int size_3);
void jacobireal(double *matrix, double *eigenvalues, double *eigenvectors, int size, int_st ist); 
void ludmp(double *matrix, int n, int *indx, double *d); 
void complex_ludmp(MKL_Complex16 *matrix, int n, int *indx, MKL_Complex16 *d); 
void lubksb(double *matrix, int n, int *indx, double *b); 
void det(double *matrix, int size, double *determinant); 
void complex_det(MKL_Complex16 *matrix, int size, MKL_Complex16 *determinant); 
void mat_transpose_mat(double *mat_1, double *mat_2, double *product, int size_1, int size_2, int size_3);
void cmat_transpose_cmat(MKL_Complex16 *mat_1, MKL_Complex16 *mat_2, MKL_Complex16 *product, int size_1, int size_2, int size_3);  
void modified_gram_schmidt(double *q, double *r, int size1, int size2); 
void complex_modified_gram_schmidt(MKL_Complex16 *q, MKL_Complex16 *r, int size1, int size2);
MKL_Complex16 conjugate(MKL_Complex16 complex_number); 
int factorial(int number); 
void comhes(MKL_Complex16 *matrix,int *integer,int size,int_st ist);
void comlr2(MKL_Complex16 *hess, MKL_Complex16 *eigs, MKL_Complex16 *eigvecs, int *integer, int size, int_st ist); 
void complex_eigenvalues(MKL_Complex16 *matrix,MKL_Complex16 *eigenvalues,MKL_Complex16 *eigenvectors,int size,int_st ist); 
void complex_eigvecs_2(MKL_Complex16 *matrix, MKL_Complex16 *eigs, MKL_Complex16 *eigvecs, int size); 

/***************************************************************/

MKL_Complex16 normalization_one_body_bosons(MKL_Complex16 *trial_wf_bosons, MKL_Complex16 *wf_bosons, int_st ist); 
MKL_Complex16 normalization_one_body_bosons_2(MKL_Complex16 *trial_wf_bosons, MKL_Complex16 *wf_bosons,int_st ist);  
MKL_Complex16 normalization_two_body_bosons(MKL_Complex16 *trial_wf_bosons, MKL_Complex16 *wf_bosons, int_st ist); 
MKL_Complex16 perm_bosons(MKL_Complex16 *vector_1, MKL_Complex16 *vector_2, int_st ist); 

/**************************************************************/

void init(int_st *ist,cns_st *cns);
void init_kinetic_many(double *kinetic_many_full,double *kinetic_eigs,double *kinetic_eigvecs,int *neighbors,int *number_neighbors,int_st ist,cns_st cns);
void init_neighbors(int *neighbors,int *number_neighbors,int_st ist);

/**************************************************************/

void init_kinetic_fermions(double *kinetic_full_fermions,double *kinetic_backwards_fermions,double *kinetic_forwards_half_fermions,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,int *neighbors,int *number_neighbors,int_st ist,cns_st cns); 
void init_wf_fermions(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,int_st ist,cns_st cns); 
void init_wf_fermions_up(MKL_Complex16 *trial_wf_up,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,int_st ist,cns_st cns);
void init_wf_fermions_down(MKL_Complex16 *trial_wf_down,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,int_st ist,cns_st cns);
void init_walkers_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *weights,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_inverse_down, MKL_Complex16 *overlap_inverse_up, MKL_Complex16 *overlap_down,double *weight_rescaling,int_st ist,cns_st cns); 
void init_walkers_fermions_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *weights,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_inverse_up,double *weight_rescaling,int_st ist,cns_st cns);
void init_walkers_fermions_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *weights,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_down,double *weight_rescaling,int_st ist,cns_st cns);

/**************************************************************/

void init_kinetic_chemistry_real_restricted(MKL_Complex16 *kinetic_matrix_original_fermions, MKL_Complex16 *potential_supermatrix_fermions, double *kinetic_full_fermions,double *kinetic_backwards_fermions,double *kinetic_forwards_half_fermions,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_eigs_fermions,MKL_Complex16 *mean_field_density_first_transform,MKL_Complex16 *mean_field_density_second_transform,double *potential_one_body_matrix,int_st ist,cns_st cns);  
void init_kinetic_chemistry_real_unrestricted(MKL_Complex16 *kinetic_matrix_original_fermions_up, MKL_Complex16 *kinetic_matrix_original_fermions_down, MKL_Complex16 *potential_supermatrix_fermions, double *kinetic_full_fermions_up,double *kinetic_backwards_fermions_up,double *kinetic_forwards_half_fermions_up,double *kinetic_eigs_fermions_up,double *kinetic_eigvecs_fermions_up,double *kinetic_full_fermions_down,double *kinetic_backwards_fermions_down,double *kinetic_forwards_half_fermions_down,double *kinetic_eigs_fermions_down,double *kinetic_eigvecs_fermions_down,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_eigs_fermions,MKL_Complex16 *mean_field_density_first_transform,MKL_Complex16 *mean_field_density_second_transform,double *potential_one_body_matrix_up,double *potential_one_body_matrix_down,int_st ist,cns_st cns); 

void init_kinetic_chemistry_complex(MKL_Complex16 *kinetic_matrix_original_fermions, MKL_Complex16 *potential_supermatrix_fermions, double *kinetic_full_fermions,double *kinetic_backwards_fermions,double *kinetic_forwards_half_fermions,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_eigs_fermions,MKL_Complex16 *mean_field_density_first_transform,MKL_Complex16 *mean_field_density_second_transform,int_st ist,cns_st cns);

void init_wf_chemistry(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,int_st ist,cns_st cns); 
int init_wf_chemistry_restricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *kinetic_matrix_original_fermions_up,int *list_occupied_orbitals,int_st ist,cns_st cns);
int init_wf_chemistry_unrestricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *kinetic_matrix_original_fermions_up,MKL_Complex16 *kinetic_matrix_original_fermions_down,int *list_occupied_orbitals,int_st ist,cns_st cns);
int init_wf_chemistry_multi(MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,int *list_occupied_orbitals, int_st ist,cns_st cns);  
int determine_number_dets(double energy_cutoff,int number_max_dets,int number_electrons); 

void init_walkers_chemistry_no_restart_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *weights,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up, MKL_Complex16 *overlap_inverse_down, double *weight_rescaling,int_st ist,cns_st cns); 
void init_walkers_chemistry_no_restart_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *weights,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up, MKL_Complex16 *overlap_inverse_down, double *weight_rescaling,int_st ist,cns_st cns);

void init_walkers_chemistry_restart_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *weights,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up, MKL_Complex16 *overlap_inverse_down, double *weight_rescaling,int_st ist,cns_st cns);
void init_walkers_chemistry_restart_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *weights,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up, MKL_Complex16 *overlap_inverse_down, double *weight_rescaling,int_st ist,cns_st cns); 

double get_trial_energy_density_restricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_density_matrix_up,MKL_Complex16 *trial_density_matrix_down,MKL_Complex16 *kinetic_original_matrix,MKL_Complex16 *potential_original_matrix,MKL_Complex16 *energy_shifts,int_st ist); 
double get_trial_energy_density_unrestricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_density_matrix_up,MKL_Complex16 *trial_density_matrix_down,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *energy_shifts,int_st ist);
double get_trial_energy_density_multi_restricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *exact_one_body_density_matrix_up,MKL_Complex16 *exact_one_body_density_matrix_down,MKL_Complex16 *exact_two_body_density_matrix,MKL_Complex16 *kinetic_original_matrix,MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_original_matrix_spin,MKL_Complex16 *energy_shifts,int_st ist);  
//double get_trial_energy_density_multi_unrestricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *exact_one_body_density_matrix_up,MKL_Complex16 *exact_one_body_density_matrix_down,MKL_Complex16 *exact_two_body_density_matrix,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_original_matrix_spin,MKL_Complex16 *energy_shifts,int_st ist);
double get_trial_energy_density_multi_unrestricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *one_body_density_matrix_up,MKL_Complex16 *one_body_density_matrix_down,MKL_Complex16 *two_body_density_matrix,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown, MKL_Complex16 *potential_original_matrix_spin,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *energy_shifts,int_st ist); 



double get_trial_energy_density_fermions(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_density_up,MKL_Complex16 *trial_density_down,int *neighbors,int *number_neighbors,int_st ist,cns_st cns);
double get_trial_energy_density_fermions_up(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_density_up,int *neighbors,int *number_neighbors,int_st ist,cns_st cns);
double get_trial_energy_density_fermions_down(MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_density_down,int *neighbors,int *number_neighbors,int_st ist,cns_st cns);

/**************************************************************/

void init_wf_fermions_spin_polarized(MKL_Complex16 *trial_wf_up,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,int_st ist,cns_st cns); 

/***************************************************************/

void init_walkers_bosons(MKL_Complex16 *wf,MKL_Complex16 *trial_wf,MKL_Complex16 *weights,MKL_Complex16 *overlap,double *weight_rescaling,int_st ist,cns_st cns); 
void init_kinetic_bosons(double *kinetic_full_bosons,double *kinetic_backwards_bosons,double *kinetic_forwards_half_bosons,double *kinetic_eigs_bosons,double *kinetic_eigvecs_bosons,double *kinetic_matrix_bosons,double *potential_matrix_bosons,int *neighbors,int *number_neighbors,int_st ist,cns_st cns);
void init_wf_bosons(MKL_Complex16 *trial_wf,double *kinetic_eigs_bosons,double *kinetic_eigvecs_bosons,int_st ist,cns_st cns);

/**************************************************************/

void init_walkers_bose_fermi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *wf_bose_fermi,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *weights,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_bosons,double *weight_rescaling,int_st ist,cns_st cns); 

/***************************************************************/

void init_walkers_bose_fermi_spin_polarized(MKL_Complex16 *wf_up,MKL_Complex16 *wf_bose_fermi,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *weights,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_bosons,double *weight_rescaling,int_st ist,cns_st cns);

/**************************************************************/

void store_matrix_parts(MKL_Complex16 *input_matrix, double *real_matrix,double *complex_matrix,int size1,int size2); 
void double_copy_mat(double *mat_1, double *mat_2, int size); 
void d_mat_mat(double *mat_1, double *mat_2, double *product, int size_1, int size_2, int size_3); 
void d_mat_add(double *matrix_1, double *matrix_2, double *sum_matrix,int size1,int size2); 
void d_take_negative(double *positive, double *negative,int size1,int size2); 
void restore_matrix_parts(MKL_Complex16 *output_matrix, double *real_matrix, double *complex_matrix,int size1,int size2); 

/*************************************************************/

void trial_identity_fermions(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,int_st ist);
void trial_identity_fermions_up(MKL_Complex16 *trial_wf_up,int_st ist);
void trial_identity_fermions_down(MKL_Complex16 *trial_wf_down,int_st ist);  
void trial_random_fermions(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,int_st ist);
void trial_random_fermions_up(MKL_Complex16 *trial_wf_up,int_st ist);
void trial_random_fermions_down(MKL_Complex16 *trial_wf_down,int_st ist);
void trial_free_fermions(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,int_st ist,cns_st cns); 
void trial_free_fermions_up(MKL_Complex16 *trial_wf_up,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,int_st ist,cns_st cns);
void trial_free_fermions_down(MKL_Complex16 *trial_wf_down,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,int_st ist,cns_st cns);
void trial_fermions_readin(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,int_st ist); 
void trial_fermions_readin_up(MKL_Complex16 *trial_wf_up,int_st ist);
void trial_fermions_readin_down(MKL_Complex16 *trial_wf_down,int_st ist);

int trial_chemistry_restricted_noreadin(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *kinetic_matrix_original_fermions_up,int *list_occupied_orbitals,int_st ist);
int trial_chemistry_unrestricted_noreadin(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *kinetic_matrix_original_fermions_up,MKL_Complex16 *kinetic_matrix_original_fermions_down,int *list_occupied_orbitals,int_st ist);
int trial_chemistry_restricted_readin(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,int *list_occupied_orbitals,int_st); 
int trial_chemistry_multi_readin(MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,int *list_occupied_orbitals,int_st ist); 

/**************************************************************/

void trial_identity_fermions_spin_polarized(MKL_Complex16 *trial_wf_up,int_st ist);
void trial_random_fermions_spin_polarized(MKL_Complex16 *trial_wf_up,int_st ist);
void trial_free_fermions_spin_polarized(MKL_Complex16 *trial_wf_up,double *kinetic_eigs_fermions,double *kinetic_eigvecs_fermions,int_st ist,cns_st cns);
void trial_rhf_fermions_spin_polarized(MKL_Complex16 *trial_wf_up,int_st ist); 

/**************************************************************/

void trial_identity_bosons(MKL_Complex16 *trial_wf,int_st ist);
void trial_random_bosons(MKL_Complex16 *trial_wf,int_st ist);
void trial_free_bosons(MKL_Complex16 *trial_wf,double *kinetic_eigs_bosons,double *kinetic_eigvecs_bosons,int_st ist,cns_st cns);

/**************************************************************/

void neighborsperiodicboundary(int site, int *neighbors, int *number_neighbors, int_st ist); 
void neighborsopenboundary(int site, int *neighbors, int *numberneighbors, int_st ist);

/**************************************************************/

void print_dmat(double *mat, int size1, int size2, char *str); 
void print_cmat(MKL_Complex16 *mat, int size1, int size2, char *str);  
void print_dvec(double *vec, int size, char *str); 
void print_cvec(MKL_Complex16 *vec, int size, char *str); 

/*************************************************************/

void compute_density_matrix_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,int_st ist); 
void compute_density_matrix_fermions_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *density_matrix_up,int_st ist);
void compute_density_matrix_fermions_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *density_matrix_down,int_st ist);

void compute_density_matrix_chemistry_mixed_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,int_st ist); 

void compute_density_matrix_chemistry_mixed_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,int_st ist); 
void compute_density_matrix_chemistry_mixed_multi_both(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,int_st ist); 
void compute_density_matrix_chemistry_mixed_multi_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *density_matrix_up,int_st ist); 
void compute_density_matrix_chemistry_mixed_multi_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_down,MKL_Complex16 *density_matrix_down,int_st ist);

void compute_two_body_reduced_density_matrix(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,MKL_Complex16 *average_two_body_reduced_density_matrix,MKL_Complex16 weight,int_st ist); 
MKL_Complex16 compute_local_energy(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,int *neighbors,int *number_neighbors,int_st ist,cns_st cns); 
void compute_density_matrix_chemistry_bp(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,int_st ist); 


void compute_energy_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int *neighbors,int *number_neighbors,MKL_Complex16 *potential_energy_store, MKL_Complex16 *kinetic_energy_store, MKL_Complex16 *total_energy_store,MKL_Complex16 *total_weights,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *ke,MKL_Complex16 *te,MKL_Complex16 *tw); 
MKL_Complex16 compute_shift_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,int_st ist,cns_st cns); 
void compute_averaged_energy_fermions(MKL_Complex16 *potential_energy,MKL_Complex16 *kinetic_energy,MKL_Complex16 *total_energy,MKL_Complex16 *weights,int_st ist,char *str); 

MKL_Complex16 compute_kinetic_energy_density_matrix_restricted(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,MKL_Complex16 *kinetic_matrix_elements_original,int_st ist); 
MKL_Complex16 compute_kinetic_energy_density_matrix_restricted_up(MKL_Complex16 *density_matrix_up,MKL_Complex16 *kinetic_matrix_elements_original,int_st ist); 
MKL_Complex16 compute_kinetic_energy_density_matrix_restricted_down(MKL_Complex16 *density_matrix_down,MKL_Complex16 *kinetic_matrix_elements_original,int_st ist); 
MKL_Complex16 compute_potential_energy_density_matrix_restricted(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,MKL_Complex16 *potential_matrix_elements_original,int_st ist); 
MKL_Complex16 compute_kinetic_energy_density_matrix_unrestricted(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,MKL_Complex16 *kinetic_matrix_elements_original_up,MKL_Complex16 *kinetic_matrix_elements_original_down,int_st ist);
MKL_Complex16 compute_potential_energy_density_matrix_unrestricted(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,MKL_Complex16 *potential_matrix_elements_original_up,MKL_Complex16 *potential_matrix_elements_original_down,MKL_Complex16 *potential_matrix_elements_original_updown,int_st ist);

MKL_Complex16 compute_kinetic_energy_density_matrix_restricted_sparse(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,int_st ist); 
MKL_Complex16 compute_kinetic_energy_density_matrix_restricted_up_sparse(MKL_Complex16 *density_matrix_up,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,int_st ist); 
MKL_Complex16 compute_kinetic_energy_density_matrix_restricted_down_sparse(MKL_Complex16 *density_matrix_down,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,int_st ist); 
MKL_Complex16 compute_kinetic_energy_density_matrix_unrestricted_sparse(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int_st ist); 

MKL_Complex16 compute_potential_energy_density_matrix_unrestricted_sparse(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down, double *potential_matrix_sparse_up, double *potential_matrix_sparse_down, double *potential_matrix_sparse_updown, int *potential_ij_sparse_up, int *potential_ij_sparse_down, int *potential_ij_sparse_updown, int_st ist); 
MKL_Complex16 compute_potential_energy_density_matrix_restricted_sparse(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,double *potential_matrix_sparse, int *potential_ij_sparse, int_st ist); 

/***************************************************************/

void compute_energy_chemistry_mixed_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 
void compute_energy_chemistry_mixed_restricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,double *kinetic_matrix_sparse,double *potential_matrix_sparse,int *kinetic_ij_sparse,int *potential_ij_sparse,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 

void compute_energy_chemistry_mixed_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down);


void compute_energy_chemistry_mixed_multi_restricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,double *kinetic_matrix_sparse,double *potential_matrix_sparse,int *kinetic_ij_sparse,int *potential_ij_sparse,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 

void compute_energy_chemistry_mixed_multi_unrestricted_sparse_equilibration(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,MKL_Complex16 *energies,MKL_Complex16 *energies2,MKL_Complex16 *energies3,MKL_Complex16 *overlaps,MKL_Complex16 *density_matrices_up,MKL_Complex16 *density_matrices_down,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down);

void compute_energy_chemistry_mixed_multi_unrestricted_sparse_production(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,MKL_Complex16 *energies,MKL_Complex16 *energies2,MKL_Complex16 *energies3,MKL_Complex16 *overlaps,int *total_energy_flag,MKL_Complex16 *density_matrices_up,MKL_Complex16 *density_matrices_down,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down);


void compute_energy_chemistry_mixed_two_body_density_matrix_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *average_density_matrix_up,MKL_Complex16 *average_density_matrix_down,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 

void compute_energy_chemistry_mixed_two_body_density_matrix_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down, MKL_Complex16 *potential_original_matrix_updown, MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *average_density_matrix_up,MKL_Complex16 *average_density_matrix_down,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 

void compute_energy_chemistry_mixed_two_body_density_matrix_multi_unrestricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *average_density_matrix_up,MKL_Complex16 *average_density_matrix_down,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 

void compute_energy_chemistry_mixed_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down, MKL_Complex16 *potential_original_matrix_updown, MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 
void compute_energy_chemistry_mixed_unrestricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down);  


/************************************************************/

MKL_Complex16 compute_shift_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,double *potential_matrix_bosons,int_st ist,cns_st cns,int site); 
void compute_energy_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *weights,double *kinetic_matrix_bosons,double *potential_matrix_bosons,int *neighbors,int *number_neighbors,MKL_Complex16 *potential_energy,MKL_Complex16 *kinetic_energy,MKL_Complex16 *total_energy,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *ke,MKL_Complex16 *te,MKL_Complex16 *tw);
MKL_Complex16 compute_ke_bosons(MKL_Complex16 *wf_bosons, MKL_Complex16 *trial_wf_bosons,double *kinetic_energy,int_st ist); 
MKL_Complex16 compute_pe_singlebody_bosons(MKL_Complex16 *wf_bosons, MKL_Complex16 *trial_wf_bosons,double *potential_energy,int_st ist);
MKL_Complex16 compute_pe_twobody_bosons(MKL_Complex16 *wf_bosons, MKL_Complex16 *trial_wf_bosons,int site,int_st ist);
void compute_averaged_energy_bosons(MKL_Complex16 *potential_energy,MKL_Complex16 *kinetic_energy,MKL_Complex16 *total_energy,MKL_Complex16 *weights,int_st ist,char *str);

/**************************************************************/

void compute_energy_bose_fermi(MKL_Complex16 *wf_bosons,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,double *kinetic_matrix_bosons,double *potential_matrix_bosons,int *neighbors,int *number_neighbors,MKL_Complex16 *potential_energy_store, MKL_Complex16 *kinetic_energy_store, MKL_Complex16 *coupling_energy_store, MKL_Complex16 *total_energy_store,MKL_Complex16 *total_weights,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *ke,MKL_Complex16 *ce,MKL_Complex16 *te,MKL_Complex16 *tw); 
MKL_Complex16 compute_coupling_bose_fermi(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,double *potential_matrix_bosons,MKL_Complex16 *greens_function_up,MKL_Complex16 *greens_function_down,int_st ist); 
void compute_averaged_energy_bose_fermi(MKL_Complex16 *potential_energy,MKL_Complex16 *kinetic_energy,MKL_Complex16 *coupling_energy,MKL_Complex16 *total_energy,MKL_Complex16 *weights,int_st ist,char *str);

/************************************************************/

void compute_energy_bose_fermi_spin_polarized(MKL_Complex16 *wf_bosons,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,double *kinetic_matrix_bosons,double *potential_matrix_bosons,int *neighbors,int *number_neighbors,MKL_Complex16 *potential_energy_store, MKL_Complex16 *kinetic_energy_store, MKL_Complex16 *coupling_energy_store, MKL_Complex16 *total_energy_store,MKL_Complex16 *total_weights,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *ke,MKL_Complex16 *ce,MKL_Complex16 *te,MKL_Complex16 *tw);
MKL_Complex16 compute_coupling_bose_fermi_spin_polarized(int walker,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,double *potential_matrix_bosons,MKL_Complex16 *greens_function_up,int_st ist);
void compute_greens_function_fermions_spin_polarized(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *greens_function_up,int_st ist); 

/************************************************************/

void normalize_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *weights,int_st ist); 
void normalize_chemistry(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *weights,int_st ist);
void normalize_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,int_st ist); 
void orthogonalize_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *R_up,MKL_Complex16 *R_down,int_st ist); 
void orthogonalize_fermions_up(MKL_Complex16 *wf_up,MKL_Complex16 *overlap_up,MKL_Complex16 *weights,MKL_Complex16 *R_up,int_st ist);
void orthogonalize_fermions_down(MKL_Complex16 *wf_down,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *R_down,int_st ist);
void orthogonalize_chemistry(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *R_up,MKL_Complex16 *R_down,int_st ist);
void orthogonalize_chemistry_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *R_up,MKL_Complex16*R_down,int_st ist); 
void orthogonalize_chemistry_multi_both(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *R_up,MKL_Complex16*R_down,int_st ist); 
void orthogonalize_chemistry_multi_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *det_overlap_up,MKL_Complex16 *weights,MKL_Complex16 *R_up,int_st ist); 
void orthogonalize_chemistry_multi_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *R_down,int_st ist); 
void orthogonalize_fermions_spin_polarized(MKL_Complex16 *wf_up,MKL_Complex16 *overlap_up,MKL_Complex16 *weights,MKL_Complex16 *R_up,int_st ist); 
void normalize_fermions_spin_polarized(MKL_Complex16 *wf_fermions,MKL_Complex16 *weights,int_st ist); 
void get_normalized_wf_up(MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *wf_up,int_st ist); 
void get_normalized_wf_down(MKL_Complex16 *normalized_wave_function_down,MKL_Complex16 *wf_down,int_st ist); 
void get_normalized_wf_up_chemistry(MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *wf_up,int_st ist);
void get_normalized_wf_down_chemistry(MKL_Complex16 *normalized_wave_function_down,MKL_Complex16 *wf_down,int_st ist);

/*************************************************************/

void propagate_wave_functions_continuous_fermions_spin_polarized(MKL_Complex16 *wf_up,int_st ist,cns_st cns,MKL_Complex16 exponential_up,int sites); 
void update_overlaps_fermions_spin_polarized(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,int_st ist); 
void propagate_wave_functions_continuous_chemistry_2_both(MKL_Complex16 *new_wf_up,MKL_Complex16 *new_wf_down,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *exponential_matrix_up,MKL_Complex16 *exponential_matrix_down,int_st ist) ; 
void propagate_wave_functions_continuous_chemistry_2_up(MKL_Complex16 *new_wf_up,MKL_Complex16 *wf_up,MKL_Complex16 *exponential_matrix_up,int_st ist) ; 
void propagate_wave_functions_continuous_chemistry_2_down(MKL_Complex16 *new_wf_down,MKL_Complex16 *wf_down,MKL_Complex16 *exponential_matrix_down,int_st ist) ; 

/************************************************************/

double find_gamma(double U,double dtau); 
MKL_Complex16 determine_overlap_ratio_continuous_fermions(MKL_Complex16 *wf,MKL_Complex16 *trial_wf,MKL_Complex16 *overlap_inverse,int_st ist,cns_st cns,MKL_Complex16 exponential,int size,int site); 
MKL_Complex16 determine_overlap_ratio_discrete_fermions(MKL_Complex16 *wf,MKL_Complex16 *trial_wf,MKL_Complex16 *overlap_inverse,int_st ist,cns_st cns,double spin_up,double field_up,int site); 

void propagate_forwards_potential_discrete_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_meanfield_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_phaseless_meanfield_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_allshifts_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_phaseless_allshifts_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 

void update_overlaps_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,int_st ist); 
void update_overlaps_fermions_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,int_st ist);
void update_overlaps_fermions_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_down,int_st ist);

void update_overlaps_chemistry_multi_phaseless_both(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,int_st ist);
void update_overlaps_chemistry_multi_phaseless_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,int_st ist);
void update_overlaps_chemistry_multi_phaseless_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_down,int_st ist);

void update_overlaps_chemistry_multi_energy_both(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,int_st ist);
void update_overlaps_chemistry_multi_energy_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,int_st ist);
void update_overlaps_chemistry_multi_energy_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_down,int_st ist);

void update_overlaps_chemistry(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,int_st ist);

void propagate_wave_functions_discrete_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,int_st ist,cns_st cns,double field_up,int sites); 
void propagate_wave_functions_continuous_fermions(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,int_st ist,cns_st cns,MKL_Complex16 exponential_up,MKL_Complex16 exponential_down,int sites); 
void propagate_wave_functions_continuous_fermions_up(MKL_Complex16 *wf_up,int_st ist,cns_st cns,MKL_Complex16 exponential_up,int sites);
void propagate_wave_functions_continuous_fermions_down(MKL_Complex16 *wf_down,int_st ist,cns_st cns,MKL_Complex16 exponential_down,int sites);

/************************************************************/

MKL_Complex16 determine_overlap_ratio_continuous_bosons(MKL_Complex16 *wf,MKL_Complex16 *trial_wf,int_st ist,MKL_Complex16 exponential,int site);
void propagate_forwards_potential_continuous_phaseless_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_meanfield_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_phaseless_meanfield_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_allshifts_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,double *potential_matrix_bosons,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_phaseless_allshifts_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,double *potential_matrix_bosons,int_st ist,cns_st cns,long *idum);
void update_overlaps_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,int_st ist);
void propagate_wave_functions_continuous_bosons(MKL_Complex16 *wf_bosons,MKL_Complex16 exponential_bosons,int sites); 

/************************************************************/

MKL_Complex16 determine_overlap_ratio_continuous_bose_fermi(MKL_Complex16 *wf,MKL_Complex16 *trial_wf,int_st ist,MKL_Complex16 exponential,int site);
void propagate_forwards_potential_continuous_bose_fermi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_phaseless_bose_fermi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_meanfield_bose_fermi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_phaseless_meanfield_bose_fermi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_allshifts_bose_fermi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_phaseless_allshifts_bose_fermi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void update_overlaps_bose_fermi(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,int_st ist);
void propagate_wave_functions_continuous_bose_fermi(MKL_Complex16 *wf_bosons,MKL_Complex16 exponential_bosons,int sites);

/************************************************************/

void propagate_forwards_potential_continuous_phaseless_bose_fermi_spin_polarized(MKL_Complex16 *wf_up,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_bose_fermi_spin_polarized(MKL_Complex16 *wf_up, MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_meanfield_bose_fermi_spin_polarized(MKL_Complex16 *wf_up,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_phaseless_meanfield_bose_fermi_spin_polarized(MKL_Complex16 *wf_up,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_allshifts_bose_fermi_spin_polarized(MKL_Complex16 *wf_up,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,double *potential_matrix_bosons,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_phaseless_allshifts_bose_fermi_spin_polarized(MKL_Complex16 *wf_up,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,double *potential_matrix_bosons,int_st ist,cns_st cns,long *idum); 
void update_overlaps_bose_fermi_spin_polarized(MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,int_st ist);
void propagate_wave_functions_continuous_bose_fermi_spin_polarized(MKL_Complex16 *wf_bosons,MKL_Complex16 exponential_bosons,int sites);

/************************************************************/

void propagate_forwards_kinetic_fermions(double *kinetic_full,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist); 
void propagate_forwards_kinetic_fermions_up(double *kinetic_full,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,MKL_Complex16 *weights,int_st ist);
void propagate_forwards_kinetic_fermions_down(double *kinetic_full,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_fermions(double *kinetic_backwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_fermions_up(double *kinetic_backwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_fermions_down(double *kinetic_backwards_half,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_fermions(double *kinetic_forwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist); 
void propagate_half_forwards_kinetic_fermions_up(double *kinetic_forwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_fermions_down(double *kinetic_forwards_half,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);

/************************************************************/

void propagate_forwards_kinetic_chemistry_real_restricted(double *kinetic_full,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_chemistry_real_restricted(double *kinetic_backwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_chemistry_real_restricted(double *kinetic_forwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);


void propagate_forwards_kinetic_chemistry_real_unrestricted(double *kinetic_full_up,double *kinetic_full_down,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_chemistry_real_unrestricted(double *kinetic_backwards_half_up, double *kinetic_backwards_half_down, MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_chemistry_real_unrestricted(double *kinetic_forwards_half_up, double *kinetic_fowards_half_down, MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);

void propagate_forwards_kinetic_chemistry_real_multi_restricted(double *kinetic_full,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_forwards_kinetic_chemistry_real_multi_restricted_both(double *kinetic_full_fermions,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist); 
void propagate_forwards_kinetic_chemistry_real_multi_up(double *kinetic_full_fermions,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *weights,int_st ist); 
void propagate_forwards_kinetic_chemistry_real_multi_down(double *kinetic_full_fermions,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist); 

void propagate_forwards_kinetic_chemistry_real_multi_unrestricted(double *kinetic_full_up,double *kinetic_full_down,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *phases,int_st ist);
void propagate_forwards_kinetic_chemistry_real_multi_unrestricted_both(double *kinetic_full_up,double *kinetic_full_down,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *phases,int_st ist);


void propagate_half_backwards_kinetic_chemistry_real_multi_restricted(double *kinetic_backwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_chemistry_real_multi_restricted_both(double *kinetic_backwards_half_fermions,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist); 
void propagate_half_backwards_kinetic_chemistry_real_multi_up(double *kinetic_backwards_half_fermions,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_chemistry_real_multi_down(double *kinetic_backwards_half_fermions,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);  

void propagate_half_backwards_kinetic_chemistry_real_multi_unrestricted(double *kinetic_backwards_half_up,double *kinetic_backwards_half_down,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_chemistry_real_multi_unrestricted_both(double *kinetic_backwards_half_up,double *kinetic_backwards_half_down,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);


void propagate_half_forwards_kinetic_chemistry_real_multi_restricted(double *kinetic_forwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_chemistry_real_multi_restricted_both(double *kinetic_forwards_half_fermions,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist); 

void propagate_half_forwards_kinetic_chemistry_real_multi_unrestricted(double *kinetic_forwards_half_up,double *kinetic_forwards_half_down,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_chemistry_real_multi_unrestricted_both(double *kinetic_forwards_half_up,double *kinetic_forwards_half_down,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_total,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_chemistry_real_multi_up(double *kinetic_forwards_half_up,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *det_overlap_up,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_chemistry_real_multi_down(double *kinetic_forwards_half_down,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,int_st ist);

void propagate_forwards_kinetic_chemistry_complex(double *kinetic_full,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_chemistry_complex(double *kinetic_backwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_chemistry_complex(double *kinetic_forwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int_st ist);

/************************************************************/

void propagate_forwards_kinetic_fermions_spin_polarized(double *kinetic_full,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_fermions_spin_polarized(double *kinetic_backwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_fermions_spin_polarized(double *kinetic_forwards_half,MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int_st ist);

/************************************************************/

void propagate_forwards_kinetic_bosons(double *kinetic_full_bosons,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,int_st ist);
void propagate_half_backwards_kinetic_bosons(double *kinetic_backwards_half_bosons,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,int_st ist);
void propagate_half_forwards_kinetic_bosons(double *kinetic_forwards_half_bosons,MKL_Complex16 *wf_bosons,MKL_Complex16 *trial_wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *weights,int_st ist);

/***********************************************************/

void normalize(MKL_Complex16 *weights,int_st ist,cns_st cns); 
int population_control_bose_fermi_spin_polarized(MKL_Complex16 *weights,MKL_Complex16 *wf_up,MKL_Complex16 *wf_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_bosons,MKL_Complex16 *new_walker_weights,MKL_Complex16 *new_wf_up,MKL_Complex16 *new_wf_bosons,MKL_Complex16 *new_overlap_inverse_up,MKL_Complex16 *new_overlap_up,MKL_Complex16 *new_overlap_bosons,int *walkers_big,int *walkers_small,int *walkers_copied,double *weights_rescaled,int_st ist,cns_st cns,int step);
int population_control_bose_fermi(MKL_Complex16 *weights,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *wf_bosons,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *overlap_bosons,MKL_Complex16 *new_walker_weights,MKL_Complex16 *new_wf_up,MKL_Complex16 *new_wf_down,MKL_Complex16 *new_wf_bosons,MKL_Complex16 *new_overlap_inverse_up,MKL_Complex16 *new_overlap_inverse_down,MKL_Complex16 *new_overlap_up,MKL_Complex16 *new_overlap_down,MKL_Complex16 *new_overlap_bosons,int *walkers_big,int *walkers_small,int *walkers_copied,double *weights_rescaled,int_st ist,cns_st cns); 
int population_control_bosons(MKL_Complex16 *weights,MKL_Complex16 *wf_bosons,MKL_Complex16 *overlap_bosons,MKL_Complex16 *new_weights,MKL_Complex16 *new_wf_bosons,MKL_Complex16 *new_overlap_bosons,int *walkers_big,int *walkers_small,int *walkers_copied,double *weight_rescaling,int_st ist,cns_st cns);
int population_control_fermions(MKL_Complex16 *weights,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *new_weights,MKL_Complex16 *new_wf_up,MKL_Complex16 *new_wf_down,MKL_Complex16 *new_overlap_inverse_up,MKL_Complex16 *new_overlap_inverse_down,MKL_Complex16 *new_overlap_up,MKL_Complex16 *new_overlap_down,int *walkers_big,int *walkers_small,int *walkers_copied,double *weight_rescaling,int_st ist,cns_st cns);
int population_control_chemistry(MKL_Complex16 *weights,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *new_weights,MKL_Complex16 *new_wf_up,MKL_Complex16 *new_wf_down,MKL_Complex16 *new_overlap_inverse_up,MKL_Complex16 *new_overlap_inverse_down,MKL_Complex16 *new_overlap_up,MKL_Complex16 *new_overlap_down,int *walkers_big,int *walkers_small,int *walkers_copied,double *weight_rescaling,int_st ist,cns_st cns);
int population_control_chemistry_multi(MKL_Complex16 *weights,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *new_walker_weights,MKL_Complex16 *new_wf_up,MKL_Complex16 *new_wf_down,MKL_Complex16 *new_overlap_inverse_up,MKL_Complex16 *new_overlap_inverse_down,MKL_Complex16 *new_overlap_total,MKL_Complex16 *new_det_overlap_up,MKL_Complex16 *new_det_overlap_down,int *walkers_big,int *walkers_small,int *walkers_copied,double *weights_rescaled,int_st ist,cns_st cns) ; 

/************************************************************/

void get_potential_matrix_elements(MKL_Complex16 *kinetic_matrix_original_fermions,MKL_Complex16 *potential_matrix_original_fermions,int_st ist,char *str1,char *str2);
void get_potential_matrix_elements_molpro_restricted(MKL_Complex16 *kinetic_matrix_original_fermions,MKL_Complex16 *potential_matrix_original_fermions,MKL_Complex16 *potential_matrix_original_spin,MKL_Complex16 *energy_shifts,int *list_occupied_orbitals,int_st ist,cns_st cns,char *str); 
void get_potential_matrix_elements_molpro_unrestricted(MKL_Complex16 *kinetic_matrix_original_fermions_up,MKL_Complex16 *kinetic_matrix_original_fermions_down,MKL_Complex16 *potential_matrix_original_fermions_up,MKL_Complex16 *potential_matrix_original_fermions_down, MKL_Complex16 *potential_matrix_original_fermions_updown,MKL_Complex16 *potential_matrix_original_fermions_spin,double *kinetic_matrix_sparse_up, double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up, int *kinetic_ij_sparse_down, int *potential_ij_sparse_up, int *potential_ij_sparse_down, int *potential_ij_sparse_updown, int *list_occupied_orbitals, MKL_Complex16 *energy_shifts,int *n_kinetic_sparse_up, int *n_kinetic_sparse_down, int *n_potential_sparse_up,int *n_potential_sparse_down, int *n_potential_sparse_updown,int_st ist,cns_st cns,char *str); 

void get_number_matrix_elements_molpro_unrestricted(int *number_kinetic_sparse_up, int *number_kinetic_sparse_down, int *number_potential_sparse_up, int *number_potential_sparse_down, int *number_potential_sparse_updown, char *str);  


void init_potential_chemistry_restricted(MKL_Complex16 *potential_matrix_original_fermions,MKL_Complex16 *potential_matrix_original_fermions_spin,MKL_Complex16 *potential_supermatrix_fermions,MKL_Complex16 *potential_eigs_fermions,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,double *potential_one_body_matrix,int_st ist,cns_st cns);
void init_potential_chemistry_unrestricted(MKL_Complex16 *potential_matrix_original_fermions_up,MKL_Complex16 *potential_matrix_original_fermions_down,MKL_Complex16 *potential_matrix_original_fermions_updown,MKL_Complex16 *potential_supermatrix_fermions,MKL_Complex16 *potential_eigs_fermions,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,double *potential_one_body_matrix_up,double *potential_one_body_matrix_down,int_st ist,cns_st cns);
void transform_eigenvalues(MKL_Complex16 *potential_eigs_fermions,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,int_st ist,cns_st cns);

/*************************************************************/

void propagate_wave_functions_continuous_chemistry(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,int_st ist,cns_st cns,MKL_Complex16 exponential_up,MKL_Complex16 exponential_down,int site1,int site2); 
void propagate_wave_function_up_chemistry(MKL_Complex16 *new_wf_up,MKL_Complex16 *wf_up,MKL_Complex16 *exponential_matrix_up,int_st ist); 
void propagate_wave_function_down_chemistry(MKL_Complex16 *new_wf_down,MKL_Complex16 *wf_down,MKL_Complex16 *exponential_matrix_down,int_st ist); 
MKL_Complex16 determine_overlap_ratio_continuous_chemistry_multi_energy(MKL_Complex16 *new_wf,MKL_Complex16 *wf,MKL_Complex16 *trial_wf_energy,MKL_Complex16 *trial_determinant_coefficients_energy,int_st ist,int size1,int size2);
MKL_Complex16 determine_overlap_ratio_continuous_chemistry_multi_phaseless(MKL_Complex16 *new_wf,MKL_Complex16 *wf,MKL_Complex16 *trial_wf_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,int_st ist,int size1,int size2);
MKL_Complex16 determine_overlap_ratio_continuous_chemistry(MKL_Complex16 *new_wf,MKL_Complex16 *wf,MKL_Complex16 *trial_wf,int_st ist,int size1,int size2);
void propagate_forwards_potential_continuous_chemistry(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum); 
void exponentiate_matrix_complex(MKL_Complex16 *exponential_propagation_matrix,MKL_Complex16 *eigs_propagation_matrix,MKL_Complex16 *eigvecs_propagation_matrix,int size);

/************************************************************/

int state_number(int number_1,int number_2,int number_3,int number_4,int number_5,int number_6,int number_7,int_st ist); 
void get_configuration(int state_number,int *config_vector,int_st ist); 
int check_electrons(int *config_vector_1,int_st ist); 

/************************************************************/

void get_mean_field_densities(MKL_Complex16 *trial_density_up,MKL_Complex16 *trial_density_down,MKL_Complex16 *mean_field_density_first_transform,MKL_Complex16 *mean_field_density_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_eigs_first_transform,MKL_Complex16 *potential_eigs_second_transform,MKL_Complex16 *mean_field_first_transform_constant, MKL_Complex16 *mean_field_second_transform_constant,int_st ist); 

/************************************************************/

MKL_Complex16 get_shift(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,MKL_Complex16 lambda_constant,MKL_Complex16 *potential_eigvecs_fermions,int gamma,int_st ist, int first_second); 
MKL_Complex16 get_shift_meanfield_both(MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,MKL_Complex16 lambda_constant,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 potential_meanfield_constant,int gamma,int_st ist, int first_second); 
MKL_Complex16 get_shift_meanfield_up(MKL_Complex16 *density_matrix_up,MKL_Complex16 lambda_constant,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 potential_meanfield_constant,int gamma,int_st ist, int first_second); 
MKL_Complex16 get_shift_meanfield_down(MKL_Complex16 *density_matrix_down,MKL_Complex16 lambda_constant,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 potential_meanfield_constant,int gamma,int_st ist, int first_second); 

/***********************************************************/

void propagate_forwards_potential_continuous_chemistry_meanfield_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_squaredshift_meanfield_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant, MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_meanfield_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix,MKL_Complex16 *potential_original_matrix,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum); 


/************************************************************************************************************************/

void propagate_forwards_potential_continuous_bp_chemistry_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix,MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_meanfield_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_meanfield_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_meanfield_real_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);


void propagate_forwards_potential_continuous_bp_chemistry_phaseless_squaredshift_meanfield_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant, MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_squaredshift_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_meanfield_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_squaredshift_meanfield_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant, MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_meanfield_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_bp_chemistry_phaseless_squaredshift_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_squaredshift_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

/*******************************************************************************************************************************************/

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down, MKL_Complex16 *potential_original_matrix_updown, int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_real_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down, MKL_Complex16 *potential_original_matrix_updown, int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown, MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down, MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_real_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down, MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down, int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_meanfield_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_meanfield_real_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown, MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

/********************************************************************************************************/

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_squaredshift_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_squaredshift_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_squaredshift_meanfield_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant, MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_mixed_chemistry_real_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum);

/**************************************************************************************************************/

void propagate_forwards_potential_continuous_mixed_chemistry_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_meanfield_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_squaredshift_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum); 



void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_multi_unrestricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_multi_unrestricted_both(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *eights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_matrix_original_fermions_up,MKL_Complex16 *kinetic_matrix_original_fermions_down,MKL_Complex16 *potential_matrix_original_fermions_up,MKL_Complex16 *potential_matrix_original_fermions_down,MKL_Complex16 *potential_matrix_original_fermions_updown,MKL_Complex16 *mean_field_first_transform_constant,MKL_Complex16 *mean_field_second_transform_constant,int_st ist,cns_st cns,long *idum); 



void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_multi_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix,MKL_Complex16 *potential_original_matrix,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_squaredshift_meanfield_real_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_meanfield_first_constant, MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum); 


void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_multi_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_multi_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_multi_unrestricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,int_st ist,cns_st cns,long *idum);





void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_multi_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_multi_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);


void propagate_forwards_potential_continuous_mixed_chemistry_real_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_meanfield_real_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_eigvecs_fermions,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_real_multi_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_restricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse,double *potential_matrix_sparse,int *kinetic_ij_sparse,int *potential_ij_sparse,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_restricted_both_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse,double *potential_matrix_sparse,int *kinetic_ij_sparse,int *potential_ij_sparse,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,MKL_Complex16 *det_overlap_up,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_down,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_up_sparse_equilibration(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,MKL_Complex16 *det_overlap_up,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_down_sparse_equilibration(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_down,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_up_sparse_production(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,MKL_Complex16 *det_overlap_up,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_down_sparse_production(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_down,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix,MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_restricted_both(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix,MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,MKL_Complex16 *det_overlap_up,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_down,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);



void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_up_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,MKL_Complex16 *det_overlap_up,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse_up,int *kinetic_ij_sparse_up,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_down_sparse(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_down,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse_down,int *kinetic_ij_sparse_down,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);



void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_unrestricted_sparse_equilibration(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *phases,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_unrestricted_sparse_both_equilibration(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *phases,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_unrestricted_sparse_production(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *phases,int *local_energy_flag,int *field_flag,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_mixed_chemistry_phaseless_localenergy_meanfield_real_multi_unrestricted_sparse_both_production(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *phases,int *local_energy_flag,int *field_flag,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,int_st ist,cns_st cns,long *idum);

/*************************************************************************************************************/

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_squaredshift_meanfield_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_meanfield_first_constant, MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_meanfield_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_squaredshift_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_multi_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_multi_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

void propagate_forwards_potential_continuous_bp_chemistry_real_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_squaredshift_meanfield_real_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_meanfield_first_constant, MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_meanfield_multi_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_meanfield_multi_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);


void propagate_forwards_potential_continuous_bp_chemistry_multi_real(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_meanfield_real_multi(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_meanfield_first_constant,MKL_Complex16 *potential_meanfield_second_constant,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 

void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_real_multi_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum); 
void propagate_forwards_potential_continuous_bp_chemistry_phaseless_localenergy_real_multi_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *weights,MKL_Complex16 *potential_eigs_fermions_first_transform,MKL_Complex16 *potential_eigs_fermions_second_transform,MKL_Complex16 *potential_eigvecs_fermions,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *potential_matrices_back_propagation_up,MKL_Complex16 *potential_matrices_back_propagation_down,int_st ist,cns_st cns,long *idum);

/*************************************************************************************************************/

int determine_production_runs(double *current_energy,double *previous_energies,int_st ist,cns_st cns); 
void accumulate_energy_blocks(MKL_Complex16 potential_energy, MKL_Complex16 kinetic_energy, MKL_Complex16 total_energy, MKL_Complex16 current_weight, MKL_Complex16 *total_potential_energy, MKL_Complex16 *total_kinetic_energy, MKL_Complex16 *total_energy_2, MKL_Complex16 *total_weight); 
double error_real(double average, double stdev, double number);

/*************************************************************************************************************/

MKL_Complex16 compute_overlap_inverse_multi_energy(MKL_Complex16 *trial_wf_up_energy, MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,int_st ist) ; 
MKL_Complex16 compute_overlap_inverse_multi_energy_both(MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,int_st ist);  
MKL_Complex16 compute_overlap_inverse_multi_energy_down(MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *wf_down,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_down,int_st ist); 
MKL_Complex16 compute_overlap_inverse_multi_energy_up(MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *wf_up,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *det_overlap_up,int_st ist); 
MKL_Complex16 compute_overlap_inverse(MKL_Complex16 *trial_wf, MKL_Complex16 *wf,MKL_Complex16 *overlap_inverse,int_st ist,int flag_up_down); 

MKL_Complex16 compute_overlap_inverse_multi_phaseless(MKL_Complex16 *trial_wf_up_phaseless, MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,int_st ist) ;
MKL_Complex16 compute_overlap_inverse_multi_phaseless_both(MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,int_st ist);
MKL_Complex16 compute_overlap_inverse_multi_phaseless_down(MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *wf_down,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *det_overlap_down,int_st ist);
MKL_Complex16 compute_overlap_inverse_multi_phaseless_up(MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *wf_up,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *det_overlap_up,int_st ist);
MKL_Complex16 compute_overlap_inverse(MKL_Complex16 *trial_wf, MKL_Complex16 *wf,MKL_Complex16 *overlap_inverse,int_st ist,int flag_up_down);

/*************************************************************************************************************/

void compute_energy_extended(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int *neighbors,int *number_neighbors,MKL_Complex16 *potential_energy_store, MKL_Complex16 *kinetic_energy_store, MKL_Complex16 *total_energy_store,MKL_Complex16 *total_weights,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *ke,MKL_Complex16 *te,MKL_Complex16 *tw,MKL_Complex16 *average_wave_function_up,MKL_Complex16 *average_wave_function_down); 
void compute_energy_extended_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *weights,int *neighbors,int *number_neighbors,MKL_Complex16 *potential_energy_store, MKL_Complex16 *kinetic_energy_store, MKL_Complex16 *total_energy_store,MKL_Complex16 *total_weights,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *ke,MKL_Complex16 *te,MKL_Complex16 *tw,MKL_Complex16 *average_wave_function_up);
void compute_energy_extended_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *weights,int *neighbors,int *number_neighbors,MKL_Complex16 *potential_energy_store, MKL_Complex16 *kinetic_energy_store, MKL_Complex16 *total_energy_store,MKL_Complex16 *total_weights,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *ke,MKL_Complex16 *te,MKL_Complex16 *tw,MKL_Complex16 *average_wave_function_down);
MKL_Complex16 compute_shift_extended(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,int_st ist,cns_st cns); 
MKL_Complex16 compute_local_energy_extended(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,int *neighbors,int *number_neighbors,int_st ist,cns_st cns); 
void propagate_forwards_potential_continuous_extended(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_up,MKL_Complex16 *overlap_down,int *neighbors,int *number_neighbors,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);   
void propagate_forwards_potential_continuous_extended_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_up,int *neighbors,int *number_neighbors,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);
void propagate_forwards_potential_continuous_extended_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *overlap_down,int *neighbors,int *number_neighbors,MKL_Complex16 *weights,int_st ist,cns_st cns,long *idum);

void compute_averaged_energy_extended(MKL_Complex16 *potential_energy,MKL_Complex16 *kinetic_energy,MKL_Complex16 *total_energy,MKL_Complex16 *weights,int_st ist,char *str);

/**************************************************************************************************************/

void compute_energy_chemistry_bp_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,MKL_Complex16 *prev_wf_up,MKL_Complex16 *prev_wf_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *average_wave_function_up,MKL_Complex16 *average_wave_function_down); 

void compute_energy_chemistry_bp_restricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,MKL_Complex16 *prev_wf_up,MKL_Complex16 *prev_wf_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix,double *kinetic_matrix_sparse_up,double *potential_matrix_sparse_up,int *kinetic_ij_sparse_up,int *potential_ij_sparse_up,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down);  

void compute_energy_chemistry_bp_two_body_density_matrix_restricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,MKL_Complex16 *prev_wf_up,MKL_Complex16 *prev_wf_down,MKL_Complex16 *weights,double *kinetic_matrix_sparse,double *potential_matrix_sparse,int *kinetic_ij_sparse,int *potential_ij_sparse,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *average_density_matrix_up,MKL_Complex16 *average_density_matrix_down,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 

void compute_energy_chemistry_bp_two_body_density_matrix_bp(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,MKL_Complex16 *prev_wf_up,MKL_Complex16 *prev_wf_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *average_density_matrix_up,MKL_Complex16 *average_density_matrix_down,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 

void compute_energy_chemistry_bp_unrestricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,MKL_Complex16 *prev_wf_up,MKL_Complex16 *prev_wf_down,MKL_Complex16 *weights,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 

/**************************************************************************************************************/

void copy_back_propagation_matrices_forward(MKL_Complex16* back_propagation_matrix_up, MKL_Complex16 *back_propagation_matrix_down,int_st ist,cns_st cns); 
void copy_prev_wf_forward(MKL_Complex16 *prev_wf_up,MKL_Complex16 *prev_wf_down,int_st ist,cns_st cns); 

void back_propagation_chemistry_restricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,MKL_Complex16 *back_propagation_matrices_up,MKL_Complex16 *back_propagation_matrices_down,double *kinetic_backwards_half_fermions_real_up,double *kinetic_full_fermions_real_up,double *kinetic_forwards_half_fermions_real_up,int_st ist,cns_st cns); 
void back_propagation_chemistry_unrestricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,MKL_Complex16 *back_propagation_matrices_up,MKL_Complex16 *back_propagation_matrices_down,double *kinetic_backwards_half_fermions_real_up,double *kinetic_full_fermions_real_up,double *kinetic_forwards_half_fermions_real_up,double *kinetic_backwards_half_fermions_real_down,double *kinetic_full_fermions_real_down,double *kinetic_forwards_half_fermions_real_down,int_st ist,cns_st cns); 
void back_propagation_chemistry_multi(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,MKL_Complex16 *back_propagation_matrices_up,MKL_Complex16 *back_propagation_matrices_down,double *kinetic_backwards_half_fermions_real_up,double *kinetic_full_fermions_real_up,double *kinetic_forwards_half_fermions_real_up,int_st ist,cns_st cns);


void propagate_forwards_potential_chemistry_bp(MKL_Complex16 *back_propagation_matrices_up,MKL_Complex16 *back_propagation_matrices_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist,cns_st cns); 

void propagate_half_forwards_kinetic_chemistry_real_unrestricted_bp(double *kinetic_forwards_half_fermions_up,double *kinetic_forwards_half_fermions_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist); 
void propagate_half_backwards_kinetic_chemistry_real_restricted_bp(double *kinetic_backwards_half_fermions_real_up,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist); 
void propagate_forwards_kinetic_chemistry_real_restricted_bp(double *kinetic_full_fermions,MKL_Complex16 *bp_wf_up,MKL_Complex16 *wf_down,int_st ist); 
void propagate_half_forwards_kinetic_chemistry_real_restricted_bp(double *kinetic_forwards_half_fermions,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist); 
void propagate_half_backwards_kinetic_chemistry_real_unrestricted_bp(double *kinetic_backwards_half_fermions_up,double *kinetic_backwards_half_fermions_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist); 
void propagate_forwards_kinetic_chemistry_real_unrestricted_bp(double *kinetic_full_fermions_up,double *kinetic_full_fermions_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist); 
void propagate_half_forwards_kinetic_chemistry_real_unrestricted_bp(double *kinetic_forwards_half_fermions_up,double *kinetic_forwards_half_fermions_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist); 
void propagate_half_backwards_kinetic_chemistry_real_unrestricted_bp(double *kinetic_backwards_half_fermions_up,double *kinetic_backwards_half_fermions_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist); 

void store_prev_wf(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *prev_wf_up,MKL_Complex16 *prev_wf_down,double *kinetic_half_forwards,int_st ist); 
void init_bp_wf_restricted(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist) ;  
void init_bp_wf_multi(MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *trial_determinant_coefficients,MKL_Complex16 *bp_wf_up,MKL_Complex16 *bp_wf_down,int_st ist);

/****************************************************************************************************************/

void compute_energy_chemistry_restricted_exact(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down);
void compute_energy_chemistry_restricted_exact_two_body_density_matrix(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *average_density_matrix_up,MKL_Complex16 *average_density_matrix_down,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 
void compute_energy_chemistry_unrestricted_exact(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down, MKL_Complex16 *potential_original_matrix_updown, MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down); 
void compute_energy_chemistry_unrestricted_exact_two_body_density_matrix(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *weights,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down, MKL_Complex16 *potential_original_matrix_updown, MKL_Complex16 *energy_shifts,MKL_Complex16 *total_potential_energy,MKL_Complex16 *total_kinetic_energy,MKL_Complex16 *total_energy_2,MKL_Complex16 *total_weight,double *weight_rescaling,int_st ist,cns_st cns,int step,MKL_Complex16 *pe,MKL_Complex16 *pe_error,MKL_Complex16 *ke,MKL_Complex16 *ke_error,MKL_Complex16 *te,MKL_Complex16 *te_error,MKL_Complex16 *tw,MKL_Complex16 *average_density_matrix_up,MKL_Complex16 *average_density_matrix_down,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 *normalized_wave_function_up,MKL_Complex16 *normalized_wave_function_down);  
void compute_density_matrix_chemistry_exact(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *wf_up_2,MKL_Complex16 *wf_down_2,MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,int_st ist);

/*****************************************************************************************************************/

void compute_walker_energy_chemistry_mixed_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *ke,MKL_Complex16 *pe,int_st ist); 
void compute_walker_energy_chemistry_mixed_restricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,double *kinetic_matrix_sparse,double *potential_matrix_sparse,int *kinetic_ij_sparse,int *potential_ij_sparse,MKL_Complex16 *ke,MKL_Complex16 *pe,int_st ist); 

void compute_walker_energy_chemistry_mixed_multi_phaseless(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist); 
void compute_walker_energy_chemistry_mixed_multi_phaseless_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,double *kinetic_matrix_sparse,double *potential_matrix_sparse,int *kinetic_ij_sparse, int *potential_ij_sparse, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist); 


void compute_walker_energy_chemistry_mixed_multi_phaseless_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_down,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist);
void compute_walker_energy_chemistry_mixed_multi_phaseless_down_sparse(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_down,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_down,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist); 

void compute_walker_energy_chemistry_mixed_multi_phaseless_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_up,MKL_Complex16 *det_overlap_up,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist);
void compute_walker_energy_chemistry_mixed_multi_phaseless_up_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_up,MKL_Complex16 *det_overlap_up,MKL_Complex16 *overlap_inverse_up,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist); 

void compute_walker_energy_chemistry_mixed_multi_energy_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist);
void compute_walker_energy_chemistry_mixed_multi_energy_restricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,double *kinetic_matrix_sparse,double *potential_matrix_sparse,int *kinetic_ij_sparse,int *potential_ij_sparse,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist); 

void compute_walker_energy_chemistry_mixed_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down, MKL_Complex16 *potential_original_matrix_updown, MKL_Complex16 *ke,MKL_Complex16 *pe,int_st ist);
void compute_walker_energy_chemistry_mixed_unrestricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *ke,MKL_Complex16 *pe,int_st ist);


void compute_walker_energy_chemistry_mixed_multi_energy_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *kinetic_original_matrix_up,MKL_Complex16 *kinetic_original_matrix_down,MKL_Complex16 *potential_original_matrix_up,MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist); 
void compute_walker_energy_chemistry_mixed_multi_energy_unrestricted_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *energies2, MKL_Complex16 *energies3,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *density_matrix_up,MKL_Complex16 *density_matrix_down,double *kinetic_matrix_sparse_up,double *kinetic_matrix_sparse_down,double *potential_matrix_sparse_up,double *potential_matrix_sparse_down,double *potential_matrix_sparse_updown,int *kinetic_ij_sparse_up,int *kinetic_ij_sparse_down,int *potential_ij_sparse_up,int *potential_ij_sparse_down,int *potential_ij_sparse_updown,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist); 

void compute_walker_energy_chemistry_mixed_multi_energy_down(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist);
void compute_walker_energy_chemistry_mixed_multi_energy_down_sparse(MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,double *kinetic_matrix_sparse,int *kinetic_ij_sparse,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist); 

void compute_walker_energy_chemistry_mixed_multi_energy_up(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_determinant_coefficients_energy,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist);  
void compute_walker_energy_chemistry_mixed_multi_energy_up_sparse(MKL_Complex16 *wf_up,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_determinant_coefficients_energy,double *kinetic_matrix_sparse, int *kinetic_ij_sparse,MKL_Complex16 *total_ke,MKL_Complex16 *total_pe,int_st ist); 




void compute_walker_energy_chemistry_mixed_twobody_restricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 *average_density_matrix_up,MKL_Complex16 *average_density_matrix_down,MKL_Complex16 current_weight,MKL_Complex16 *ke,MKL_Complex16 *pe,int_st ist); 

void compute_walker_energy_chemistry_mixed_twobody_unrestricted(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *kinetic_original_matrix_up, MKL_Complex16 *kinetic_original_matrix_down, MKL_Complex16 *potential_original_matrix_up, MKL_Complex16 *potential_original_matrix_down,MKL_Complex16 *potential_original_matrix_updown,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 *average_density_matrix_up,MKL_Complex16 *average_density_matrix_down,MKL_Complex16 current_weight, MKL_Complex16 *ke,MKL_Complex16 *pe,int_st ist); 

void compute_walker_energy_chemistry_mixed_twobody_multi_energy(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_energy,MKL_Complex16 *trial_wf_down_energy,MKL_Complex16 *trial_determinant_coefficients_energy,double *kinetic_matrix_sparse,double *potential_matrix_sparse,int *kinetic_ij_sparse,int *potential_ij_sparse,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 current_weight, MKL_Complex16 *total_ke,MKL_Complex16 *total_pe, int_st ist); 

void compute_walker_energy_chemistry_mixed_twobody_multi_phaseless(MKL_Complex16 *wf_up,MKL_Complex16 *wf_down,MKL_Complex16 *trial_wf_up_phaseless,MKL_Complex16 *trial_wf_down_phaseless,MKL_Complex16 *trial_determinant_coefficients_phaseless,MKL_Complex16 *overlap_total,MKL_Complex16 *det_overlap_up,MKL_Complex16 *det_overlap_down,MKL_Complex16 *overlap_inverse_up,MKL_Complex16 *overlap_inverse_down,MKL_Complex16 *kinetic_original_matrix, MKL_Complex16 *potential_original_matrix,MKL_Complex16 *average_two_body_density_matrix,MKL_Complex16 current_weight, MKL_Complex16 *total_ke,MKL_Complex16 *total_pe, int_st ist);

/******************************************************************************************************************/

double get_fci_matrix_element_kinetic_restricted(int *config_vector_1,int *config_vector_2,MKL_Complex16 *trial_density_up,MKL_Complex16 *trial_density_down,MKL_Complex16 *kinetic_matrix_original_fermions,MKL_Complex16 coefficient,int_st ist,int count);
double get_fci_matrix_element_kinetic_unrestricted(int *config_vector_1,int *config_vector_2,MKL_Complex16 *trial_density_up,MKL_Complex16 *trial_density_down,MKL_Complex16 *kinetic_matrix_original_fermions_up,MKL_Complex16 *kinetic_matrix_original_fermions_down,MKL_Complex16 coefficient,int_st ist,int count);  
int diff_orbitals(int *config_vector_1,int *config_vector_2,int size); 
int reorder_configurations(int *config_vector_1,int *config_vector_2,int size); 
double get_fci_matrix_element_potential_restricted(int *config_vector_1,int *config_vector_2,MKL_Complex16 *two_body_density_matrix,MKL_Complex16 *potential_matrix_original_fermions,MKL_Complex16 coefficient,int_st ist,int count); 
double get_fci_matrix_element_potential_unrestricted(int *config_vector_1,int *config_vector_2,MKL_Complex16 *two_body_density_matrix,MKL_Complex16 *potential_matrix_original_fermions_up,MKL_Complex16 *potential_matrix_original_fermions_down,MKL_Complex16 *potential_matrix_original_fermions_updown,MKL_Complex16 coefficient,int_st ist,int count);
void determine_configuration(int *total_config,MKL_Complex16 *trial_wf_up,MKL_Complex16 *trial_wf_down,int_st ist); 
double get_trial_potential_energy_density_matrices(MKL_Complex16 *two_body_density_matrix,MKL_Complex16 *potential_original_matrix,int_st ist); 
double get_trial_kinetic_energy_density_matrices(MKL_Complex16 *one_body_density_matrix_up,MKL_Complex16 *one_body_density_matrix_down,MKL_Complex16 *kinetic_original_matrix,int_st ist); 
int get_sign_configurations(int *config_vector_1,int *config_vector_2,int size);  
